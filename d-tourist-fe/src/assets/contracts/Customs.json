{
  "contractName": "Customs",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "TravelerDataProcessed",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "personToHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "internalType": "struct Customs.City",
          "name": "from",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "internalType": "struct Customs.City",
          "name": "to",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "date",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_fromCity",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_fromCountry",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_toCity",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_toCountry",
          "type": "string"
        }
      ],
      "name": "crossBorder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getValueAtHistoryMapping",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct Customs.City",
              "name": "from",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct Customs.City",
              "name": "to",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "internalType": "struct Customs.Trip[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TravelerDataProcessed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fromCity\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fromCountry\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_toCity\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_toCountry\",\"type\":\"string\"}],\"name\":\"crossBorder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getValueAtHistoryMapping\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"date\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct Customs.Trip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"personToHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"date\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Customs.sol\":\"Customs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Customs.sol\":{\"keccak256\":\"0xfd42b3e826c03d42ad1456ffbb7f9dd96f2ae54a846a7bb981e2eaeaa00be78e\",\"urls\":[\"bzz-raw://82df98b69f6a465b6b33180f7d4ddecec816a6d8708b215e791a56226e489b7e\",\"dweb:/ipfs/QmV58G8CseykxXNDxnrd9asfWtC47CGGFVBpgrmie7q37P\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634b89570414610046578063ca6ad14214610076578063e924f9b8146100a9575b600080fd5b610060600480360361005b9190810190610a62565b6100c5565b60405161006d9190610dba565b60405180910390f35b610090600480360361008b9190810190610a8b565b61045f565b6040516100a09493929190610e0a565b60405180910390f35b6100c360048036036100be9190810190610ac7565b610766565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610454578382906000526020600020906005020160405180608001604052908160008201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f15780601f106101c6576101008083540402835291602001916101f1565b820191906000526020600020905b8154815290600101906020018083116101d457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102935780601f1061026857610100808354040283529160200191610293565b820191906000526020600020905b81548152906001019060200180831161027657829003601f168201915b505050505081525050815260200160028201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050508152505081526020016004820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016004820160089054906101000a900460ff16151515158152505081526020019060010190610125565b505050509050919050565b6000602052816000526040600020818154811061047857fe5b90600052602060002090600502016000915091505080600001604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050815250509080600201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b505050505081525050908060040160009054906101000a900467ffffffffffffffff16908060040160089054906101000a900460ff16905084565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280604051806040016040528088815260200187815250815260200160405180604001604052808681526020018581525081526020014267ffffffffffffffff1681526020016001151581525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001600082015181600001908051906020019061084a92919061093f565b50602082015181600101908051906020019061086792919061093f565b505050602082015181600201600082015181600001908051906020019061088f92919061093f565b5060208201518160010190805190602001906108ac92919061093f565b50505060408201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160040160086101000a81548160ff0219169083151502179055505050507f5f245140e6a58e4e1571f8cf8b0ee811e0c59120ece8b5054cafa69de3b1b52060016040516109319190610ddc565b60405180910390a150505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061098057805160ff19168380011785556109ae565b828001600101855582156109ae579182015b828111156109ad578251825591602001919060010190610992565b5b5090506109bb91906109bf565b5090565b6109e191905b808211156109dd5760008160009055506001016109c5565b5090565b90565b6000813590506109f381610fcb565b92915050565b600082601f830112610a0a57600080fd5b8135610a1d610a1882610e8a565b610e5d565b91508082526020830160208301858383011115610a3957600080fd5b610a44838284610f78565b50505092915050565b600081359050610a5c81610fe2565b92915050565b600060208284031215610a7457600080fd5b6000610a82848285016109e4565b91505092915050565b60008060408385031215610a9e57600080fd5b6000610aac858286016109e4565b9250506020610abd85828601610a4d565b9150509250929050565b60008060008060808587031215610add57600080fd5b600085013567ffffffffffffffff811115610af757600080fd5b610b03878288016109f9565b945050602085013567ffffffffffffffff811115610b2057600080fd5b610b2c878288016109f9565b935050604085013567ffffffffffffffff811115610b4957600080fd5b610b55878288016109f9565b925050606085013567ffffffffffffffff811115610b7257600080fd5b610b7e878288016109f9565b91505092959194509250565b6000610b968383610d32565b905092915050565b6000610ba982610ec6565b610bb38185610ee9565b935083602082028501610bc585610eb6565b8060005b85811015610c015784840389528151610be28582610b8a565b9450610bed83610edc565b925060208a01995050600181019050610bc9565b50829750879550505050505092915050565b610c1c81610f2e565b82525050565b610c2b81610f2e565b82525050565b6000610c3c82610ed1565b610c468185610efa565b9350610c56818560208601610f87565b610c5f81610fba565b840191505092915050565b6000610c77601a83610f0b565b91507f426f726465722063726f7373696e6720697320616c6c6f7765640000000000006000830152602082019050919050565b60006040830160008301518482036000860152610cc78282610c31565b91505060208301518482036020860152610ce18282610c31565b9150508091505092915050565b60006040830160008301518482036000860152610d0b8282610c31565b91505060208301518482036020860152610d258282610c31565b9150508091505092915050565b60006080830160008301518482036000860152610d4f8282610caa565b91505060208301518482036020860152610d698282610caa565b9150506040830151610d7e6040860182610d9c565b506060830151610d916060860182610c13565b508091505092915050565b610da581610f64565b82525050565b610db481610f64565b82525050565b60006020820190508181036000830152610dd48184610b9e565b905092915050565b6000604082019050610df16000830184610c22565b8181036020830152610e0281610c6a565b905092915050565b60006080820190508181036000830152610e248187610cee565b90508181036020830152610e388186610cee565b9050610e476040830185610dab565b610e546060830184610c22565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610e8057600080fd5b8060405250919050565b600067ffffffffffffffff821115610ea157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f2782610f3a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610fa5578082015181840152602081019050610f8a565b83811115610fb4576000848401525b50505050565b6000601f19601f8301169050919050565b610fd481610f1c565b8114610fdf57600080fd5b50565b610feb81610f5a565b8114610ff657600080fd5b5056fea365627a7a723158201fbacf654837f7650f8b8f1399bd51c25264d49d63bd07dcc68b893dd3134c686c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "104:1101:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:1101:0;;;;;;;",
  "deployedSourceMap": "104:1101:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:1101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;380:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;438:498;;;;;;;;;;;;;;;;:::ioo;438:498::-;616:15;:27;632:10;616:27;;;;;;;;;;;;;;;663:179;;;;;;;;686:29;;;;;;;;691:9;686:29;;;;702:12;686:29;;;663:179;;;;735:25;;;;;;;;740:7;735:25;;;;749:10;735:25;;;663:179;;;;787:15;663:179;;;;;;823:4;663:179;;;;;616:237;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;616:237:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:57;893:4;871:57;;;;;;;;;;;;;;;438:498;;;;:::o;104:1101::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:366;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1115:1;1112;1105:12;1067:2;1150:1;1167:53;1212:7;1203:6;1192:9;1188:22;1167:53;;;1157:63;;1129:97;1257:2;1275:53;1320:7;1311:6;1300:9;1296:22;1275:53;;;1265:63;;1236:98;1061:283;;;;;;1351:1041;;;;;1546:3;1534:9;1525:7;1521:23;1517:33;1514:2;;;1563:1;1560;1553:12;1514:2;1626:1;1615:9;1611:17;1598:31;1649:18;1641:6;1638:30;1635:2;;;1681:1;1678;1671:12;1635:2;1701:63;1756:7;1747:6;1736:9;1732:22;1701:63;;;1691:73;;1577:193;1829:2;1818:9;1814:18;1801:32;1853:18;1845:6;1842:30;1839:2;;;1885:1;1882;1875:12;1839:2;1905:63;1960:7;1951:6;1940:9;1936:22;1905:63;;;1895:73;;1780:194;2033:2;2022:9;2018:18;2005:32;2057:18;2049:6;2046:30;2043:2;;;2089:1;2086;2079:12;2043:2;2109:63;2164:7;2155:6;2144:9;2140:22;2109:63;;;2099:73;;1984:194;2237:2;2226:9;2222:18;2209:32;2261:18;2253:6;2250:30;2247:2;;;2293:1;2290;2283:12;2247:2;2313:63;2368:7;2359:6;2348:9;2344:22;2313:63;;;2303:73;;2188:194;1508:884;;;;;;;;2400:221;;2533:82;2611:3;2603:6;2533:82;;;2519:96;;2512:109;;;;;2684:976;;2861:70;2925:5;2861:70;;;2944:102;3039:6;3034:3;2944:102;;;2937:109;;3069:3;3111:4;3103:6;3099:17;3094:3;3090:27;3138:72;3204:5;3138:72;;;3230:7;3258:1;3243:378;3268:6;3265:1;3262:13;3243:378;;;3330:9;3324:4;3320:20;3315:3;3308:33;3375:6;3369:13;3397:96;3488:4;3473:13;3397:96;;;3389:104;;3510:76;3579:6;3510:76;;;3500:86;;3609:4;3604:3;3600:14;3593:21;;3300:321;3290:1;3287;3283:9;3278:14;;3243:378;;;3247:14;3634:4;3627:11;;3651:3;3644:10;;2840:820;;;;;;;;;;3668:94;3735:21;3750:5;3735:21;;;3730:3;3723:34;3717:45;;;3769:104;3846:21;3861:5;3846:21;;;3841:3;3834:34;3828:45;;;3880:319;;3978:35;4007:5;3978:35;;;4025:61;4079:6;4074:3;4025:61;;;4018:68;;4091:52;4136:6;4131:3;4124:4;4117:5;4113:16;4091:52;;;4164:29;4186:6;4164:29;;;4159:3;4155:39;4148:46;;3958:241;;;;;;4207:326;;4367:67;4431:2;4426:3;4367:67;;;4360:74;;4467:28;4463:1;4458:3;4454:11;4447:49;4524:2;4519:3;4515:12;4508:19;;4353:180;;;;4590:618;;4717:4;4712:3;4708:14;4800:4;4793:5;4789:16;4783:23;4852:3;4846:4;4842:14;4835:4;4830:3;4826:14;4819:38;4872:69;4936:4;4922:12;4872:69;;;4864:77;;4737:216;5029:4;5022:5;5018:16;5012:23;5081:3;5075:4;5071:14;5064:4;5059:3;5055:14;5048:38;5101:69;5165:4;5151:12;5101:69;;;5093:77;;4963:219;5199:4;5192:11;;4690:518;;;;;;5264:628;;5401:4;5396:3;5392:14;5484:4;5477:5;5473:16;5467:23;5536:3;5530:4;5526:14;5519:4;5514:3;5510:14;5503:38;5556:69;5620:4;5606:12;5556:69;;;5548:77;;5421:216;5713:4;5706:5;5702:16;5696:23;5765:3;5759:4;5755:14;5748:4;5743:3;5739:14;5732:38;5785:69;5849:4;5835:12;5785:69;;;5777:77;;5647:219;5883:4;5876:11;;5374:518;;;;;;5948:956;;6075:4;6070:3;6066:14;6158:4;6151:5;6147:16;6141:23;6210:3;6204:4;6200:14;6193:4;6188:3;6184:14;6177:38;6230:89;6314:4;6300:12;6230:89;;;6222:97;;6095:236;6402:4;6395:5;6391:16;6385:23;6454:3;6448:4;6444:14;6437:4;6432:3;6428:14;6421:38;6474:89;6558:4;6544:12;6474:89;;;6466:97;;6341:234;6648:4;6641:5;6637:16;6631:23;6660:61;6715:4;6710:3;6706:14;6692:12;6660:61;;;6585:142;6803:4;6796:5;6792:16;6786:23;6815:57;6866:4;6861:3;6857:14;6843:12;6815:57;;;6737:141;6895:4;6888:11;;6048:856;;;;;;6911:100;6982:23;6999:5;6982:23;;;6977:3;6970:36;6964:47;;;7018:110;7099:23;7116:5;7099:23;;;7094:3;7087:36;7081:47;;;7135:425;;7335:2;7324:9;7320:18;7312:26;;7385:9;7379:4;7375:20;7371:1;7360:9;7356:17;7349:47;7410:140;7545:4;7536:6;7410:140;;;7402:148;;7306:254;;;;;7567:506;;7780:2;7769:9;7765:18;7757:26;;7794:65;7856:1;7845:9;7841:17;7832:6;7794:65;;;7907:9;7901:4;7897:20;7892:2;7881:9;7877:18;7870:48;7932:131;8058:4;7932:131;;;7924:139;;7751:322;;;;;8080:771;;8346:3;8335:9;8331:19;8323:27;;8397:9;8391:4;8387:20;8383:1;8372:9;8368:17;8361:47;8422:94;8511:4;8502:6;8422:94;;;8414:102;;8564:9;8558:4;8554:20;8549:2;8538:9;8534:18;8527:48;8589:94;8678:4;8669:6;8589:94;;;8581:102;;8694:70;8760:2;8749:9;8745:18;8736:6;8694:70;;;8775:66;8837:2;8826:9;8822:18;8813:6;8775:66;;;8317:534;;;;;;;;8858:256;;8920:2;8914:9;8904:19;;8958:4;8950:6;8946:17;9057:6;9045:10;9042:22;9021:18;9009:10;9006:34;9003:62;9000:2;;;9078:1;9075;9068:12;9000:2;9098:10;9094:2;9087:22;8898:216;;;;;9121:322;;9265:18;9257:6;9254:30;9251:2;;;9297:1;9294;9287:12;9251:2;9364:4;9360:9;9353:4;9345:6;9341:17;9337:33;9329:41;;9428:4;9422;9418:15;9410:23;;9188:255;;;;9450:167;;9552:3;9544:11;;9590:4;9585:3;9581:14;9573:22;;9538:79;;;;9624:153;;9749:5;9743:12;9733:22;;9714:63;;;;9784:118;;9874:5;9868:12;9858:22;;9839:63;;;;9909:124;;10023:4;10018:3;10014:14;10006:22;;10000:33;;;;10041:194;;10187:6;10182:3;10175:19;10224:4;10219:3;10215:14;10200:29;;10168:67;;;;;10244:153;;10349:6;10344:3;10337:19;10386:4;10381:3;10377:14;10362:29;;10330:67;;;;;10406:163;;10521:6;10516:3;10509:19;10558:4;10553:3;10549:14;10534:29;;10502:67;;;;;10577:91;;10639:24;10657:5;10639:24;;;10628:35;;10622:46;;;;10675:85;;10748:5;10741:13;10734:21;10723:32;;10717:43;;;;10767:121;;10840:42;10833:5;10829:54;10818:65;;10812:76;;;;10895:72;;10957:5;10946:16;;10940:27;;;;10974:96;;11046:18;11039:5;11035:30;11024:41;;11018:52;;;;11078:145;11159:6;11154:3;11149;11136:30;11215:1;11206:6;11201:3;11197:16;11190:27;11129:94;;;;11232:268;11297:1;11304:101;11318:6;11315:1;11312:13;11304:101;;;11394:1;11389:3;11385:11;11379:18;11375:1;11370:3;11366:11;11359:39;11340:2;11337:1;11333:10;11328:15;;11304:101;;;11420:6;11417:1;11414:13;11411:2;;;11485:1;11476:6;11471:3;11467:16;11460:27;11411:2;11281:219;;;;;11508:97;;11596:2;11592:7;11587:2;11580:5;11576:14;11572:28;11562:38;;11556:49;;;;11613:117;11682:24;11700:5;11682:24;;;11675:5;11672:35;11662:2;;11721:1;11718;11711:12;11662:2;11656:74;;11737:117;11806:24;11824:5;11806:24;;;11799:5;11796:35;11786:2;;11845:1;11842;11835:12;11786:2;11780:74;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Customs {\r\n    event TravelerDataProcessed(bool success, string message);\r\n\r\n    struct Trip {\r\n        City from;\r\n        City to;\r\n        uint64 date;\r\n        bool success;\r\n    }\r\n\r\n    struct City {\r\n        string name;\r\n        string country;\r\n    }\r\n\r\n    mapping(address => Trip[]) public personToHistory;\r\n\r\n    function crossBorder(\r\n        string memory _fromCity,\r\n        string memory _fromCountry,\r\n        string memory _toCity,\r\n        string memory _toCountry) public {\r\n        personToHistory[msg.sender].push(\r\n            Trip(\r\n                City(_fromCity, _fromCountry), \r\n                City(_toCity, _toCountry), \r\n                uint64(block.timestamp), \r\n                true\r\n            )\r\n        );\r\n\r\n        emit TravelerDataProcessed(true, \"Border crossing is allowed\");\r\n    }\r\n\r\n    function getValueAtHistoryMapping(address userAddress) public view returns (Trip[] memory) {\r\n        return personToHistory[userAddress];\r\n    }\r\n\r\n    /*function _isCrossingAllowed(address _user) private pure returns (bool) {\r\n        return true;\r\n    }*/\r\n}\r\n",
  "sourcePath": "C:\\Users\\Volodymyr\\Documents\\dTourist\\contracts\\Customs.sol",
  "ast": {
    "absolutePath": "project:/contracts/Customs.sol",
    "exportedSymbols": {
      "Customs": [
        80
      ]
    },
    "id": 81,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "id": 2,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80
        ],
        "name": "Customs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 8,
            "name": "TravelerDataProcessed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "156:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "170:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:30:0"
            },
            "src": "128:58:0"
          },
          {
            "canonicalName": "Customs.Trip",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "217:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_City_$22_storage_ptr",
                  "typeString": "struct Customs.City"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 9,
                  "name": "City",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22,
                  "src": "217:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_City_$22_storage_ptr",
                    "typeString": "struct Customs.City"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "237:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_City_$22_storage_ptr",
                  "typeString": "struct Customs.City"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 11,
                  "name": "City",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 22,
                  "src": "237:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_City_$22_storage_ptr",
                    "typeString": "struct Customs.City"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "255:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "success",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "277:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trip",
            "nodeType": "StructDefinition",
            "scope": 80,
            "src": "194:103:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Customs.City",
            "id": 22,
            "members": [
              {
                "constant": false,
                "id": 19,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "328:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 18,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "name": "country",
                "nodeType": "VariableDeclaration",
                "scope": 22,
                "src": "350:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "350:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "City",
            "nodeType": "StructDefinition",
            "scope": 80,
            "src": "305:67:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "name": "personToHistory",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "380:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$17_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Customs.Trip[])"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "388:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "380:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$17_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Customs.Trip[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 24,
                  "name": "Trip",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 17,
                  "src": "399:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trip_$17_storage_ptr",
                    "typeString": "struct Customs.Trip"
                  }
                },
                "id": 25,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "399:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Trip_$17_storage_$dyn_storage_ptr",
                  "typeString": "struct Customs.Trip[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "605:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 45,
                                "name": "_fromCity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "691:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 46,
                                "name": "_fromCountry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "702:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 44,
                              "name": "City",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "686:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_City_$22_storage_ptr_$",
                                "typeString": "type(struct Customs.City storage pointer)"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "686:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_City_$22_memory",
                              "typeString": "struct Customs.City memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "_toCity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "740:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 50,
                                "name": "_toCountry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35,
                                "src": "749:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 48,
                              "name": "City",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "735:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_City_$22_storage_ptr_$",
                                "typeString": "type(struct Customs.City storage pointer)"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "735:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_City_$22_memory",
                              "typeString": "struct Customs.City memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 53,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 118,
                                  "src": "787:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "787:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "780:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": "uint64"
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "780:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "823:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_City_$22_memory",
                              "typeString": "struct Customs.City memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_City_$22_memory",
                              "typeString": "struct Customs.City memory"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 43,
                          "name": "Trip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "663:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Trip_$17_storage_ptr_$",
                            "typeString": "type(struct Customs.Trip storage pointer)"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "663:179:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trip_$17_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trip_$17_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "personToHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "616:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$17_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                          }
                        },
                        "id": 41,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "632:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "632:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "616:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trip_$17_storage_$dyn_storage",
                          "typeString": "struct Customs.Trip storage ref[] storage ref"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "616:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Trip_$17_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Customs.Trip storage ref) returns (uint256)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:237:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "616:237:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "893:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426f726465722063726f7373696e6720697320616c6c6f776564",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "899:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e99e25816b17ced99279bb8abd849457b4a53205c8c28d6e6907c86821b19a1",
                          "typeString": "literal_string \"Border crossing is allowed\""
                        },
                        "value": "Border crossing is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e99e25816b17ced99279bb8abd849457b4a53205c8c28d6e6907c86821b19a1",
                          "typeString": "literal_string \"Border crossing is allowed\""
                        }
                      ],
                      "id": 60,
                      "name": "TravelerDataProcessed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "871:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "EmitStatement",
                  "src": "866:62:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crossBorder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_fromCity",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "469:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_fromCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "503:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "_toCity",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "540:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_toCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "572:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:139:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "605:0:0"
            },
            "scope": 80,
            "src": "438:498:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1035:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "personToHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1053:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$17_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                      }
                    },
                    "id": 76,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1069:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1053:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$17_storage_$dyn_storage",
                      "typeString": "struct Customs.Trip storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 77,
                  "nodeType": "Return",
                  "src": "1046:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValueAtHistoryMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "978:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "977:21:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1020:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trip_$17_memory_$dyn_memory_ptr",
                    "typeString": "struct Customs.Trip[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 70,
                      "name": "Trip",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17,
                      "src": "1020:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trip_$17_storage_ptr",
                        "typeString": "struct Customs.Trip"
                      }
                    },
                    "id": 71,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1020:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$17_storage_$dyn_storage_ptr",
                      "typeString": "struct Customs.Trip[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:15:0"
            },
            "scope": 80,
            "src": "944:145:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 81,
        "src": "104:1101:0"
      }
    ],
    "src": "33:1174:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Customs.sol",
      "exportedSymbols": {
        "Customs": [
          80
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            80
          ],
          "name": "Customs",
          "scope": 81
        },
        "children": [
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "TravelerDataProcessed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "success",
                      "scope": 8,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3,
                        "name": "ElementaryTypeName",
                        "src": "156:4:0"
                      }
                    ],
                    "id": 4,
                    "name": "VariableDeclaration",
                    "src": "156:12:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "message",
                      "scope": 8,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 5,
                        "name": "ElementaryTypeName",
                        "src": "170:6:0"
                      }
                    ],
                    "id": 6,
                    "name": "VariableDeclaration",
                    "src": "170:14:0"
                  }
                ],
                "id": 7,
                "name": "ParameterList",
                "src": "155:30:0"
              }
            ],
            "id": 8,
            "name": "EventDefinition",
            "src": "128:58:0"
          },
          {
            "attributes": {
              "canonicalName": "Customs.Trip",
              "name": "Trip",
              "scope": 80,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "from",
                  "scope": 17,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Customs.City",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "City",
                      "referencedDeclaration": 22,
                      "type": "struct Customs.City"
                    },
                    "id": 9,
                    "name": "UserDefinedTypeName",
                    "src": "217:4:0"
                  }
                ],
                "id": 10,
                "name": "VariableDeclaration",
                "src": "217:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 17,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Customs.City",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "City",
                      "referencedDeclaration": 22,
                      "type": "struct Customs.City"
                    },
                    "id": 11,
                    "name": "UserDefinedTypeName",
                    "src": "237:4:0"
                  }
                ],
                "id": 12,
                "name": "VariableDeclaration",
                "src": "237:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "date",
                  "scope": 17,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint64",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint64",
                      "type": "uint64"
                    },
                    "id": 13,
                    "name": "ElementaryTypeName",
                    "src": "255:6:0"
                  }
                ],
                "id": 14,
                "name": "VariableDeclaration",
                "src": "255:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "success",
                  "scope": 17,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "277:4:0"
                  }
                ],
                "id": 16,
                "name": "VariableDeclaration",
                "src": "277:12:0"
              }
            ],
            "id": 17,
            "name": "StructDefinition",
            "src": "194:103:0"
          },
          {
            "attributes": {
              "canonicalName": "Customs.City",
              "name": "City",
              "scope": 80,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
                  "scope": 22,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "328:6:0"
                  }
                ],
                "id": 19,
                "name": "VariableDeclaration",
                "src": "328:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "country",
                  "scope": 22,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "350:6:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "350:14:0"
              }
            ],
            "id": 22,
            "name": "StructDefinition",
            "src": "305:67:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "personToHistory",
              "scope": 80,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Customs.Trip[])",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Customs.Trip[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 23,
                    "name": "ElementaryTypeName",
                    "src": "388:7:0"
                  },
                  {
                    "attributes": {
                      "length": null,
                      "type": "struct Customs.Trip[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Trip",
                          "referencedDeclaration": 17,
                          "type": "struct Customs.Trip"
                        },
                        "id": 24,
                        "name": "UserDefinedTypeName",
                        "src": "399:4:0"
                      }
                    ],
                    "id": 25,
                    "name": "ArrayTypeName",
                    "src": "399:6:0"
                  }
                ],
                "id": 26,
                "name": "Mapping",
                "src": "380:26:0"
              }
            ],
            "id": 27,
            "name": "VariableDeclaration",
            "src": "380:49:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "crossBorder",
              "scope": 80,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_fromCity",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 28,
                        "name": "ElementaryTypeName",
                        "src": "469:6:0"
                      }
                    ],
                    "id": 29,
                    "name": "VariableDeclaration",
                    "src": "469:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_fromCountry",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 30,
                        "name": "ElementaryTypeName",
                        "src": "503:6:0"
                      }
                    ],
                    "id": 31,
                    "name": "VariableDeclaration",
                    "src": "503:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_toCity",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 32,
                        "name": "ElementaryTypeName",
                        "src": "540:6:0"
                      }
                    ],
                    "id": 33,
                    "name": "VariableDeclaration",
                    "src": "540:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_toCountry",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "572:6:0"
                      }
                    ],
                    "id": 35,
                    "name": "VariableDeclaration",
                    "src": "572:24:0"
                  }
                ],
                "id": 36,
                "name": "ParameterList",
                "src": "458:139:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 37,
                "name": "ParameterList",
                "src": "605:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Trip_$17_memory",
                                  "typeString": "struct Customs.Trip memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Customs.Trip storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Customs.Trip storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27,
                                      "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                                      "value": "personToHistory"
                                    },
                                    "id": 38,
                                    "name": "Identifier",
                                    "src": "616:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 128,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 39,
                                        "name": "Identifier",
                                        "src": "632:3:0"
                                      }
                                    ],
                                    "id": 40,
                                    "name": "MemberAccess",
                                    "src": "632:10:0"
                                  }
                                ],
                                "id": 41,
                                "name": "IndexAccess",
                                "src": "616:27:0"
                              }
                            ],
                            "id": 42,
                            "name": "MemberAccess",
                            "src": "616:32:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Customs.Trip memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_City_$22_memory",
                                      "typeString": "struct Customs.City memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_City_$22_memory",
                                      "typeString": "struct Customs.City memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "type(struct Customs.Trip storage pointer)",
                                  "value": "Trip"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "663:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": true,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct Customs.City memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 22,
                                      "type": "type(struct Customs.City storage pointer)",
                                      "value": "City"
                                    },
                                    "id": 44,
                                    "name": "Identifier",
                                    "src": "686:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 29,
                                      "type": "string memory",
                                      "value": "_fromCity"
                                    },
                                    "id": 45,
                                    "name": "Identifier",
                                    "src": "691:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 31,
                                      "type": "string memory",
                                      "value": "_fromCountry"
                                    },
                                    "id": 46,
                                    "name": "Identifier",
                                    "src": "702:12:0"
                                  }
                                ],
                                "id": 47,
                                "name": "FunctionCall",
                                "src": "686:29:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": true,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct Customs.City memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 22,
                                      "type": "type(struct Customs.City storage pointer)",
                                      "value": "City"
                                    },
                                    "id": 48,
                                    "name": "Identifier",
                                    "src": "735:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 33,
                                      "type": "string memory",
                                      "value": "_toCity"
                                    },
                                    "id": 49,
                                    "name": "Identifier",
                                    "src": "740:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 35,
                                      "type": "string memory",
                                      "value": "_toCountry"
                                    },
                                    "id": 50,
                                    "name": "Identifier",
                                    "src": "749:10:0"
                                  }
                                ],
                                "id": 51,
                                "name": "FunctionCall",
                                "src": "735:25:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint64",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint64)",
                                      "value": "uint64"
                                    },
                                    "id": 52,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "780:6:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "timestamp",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 118,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 53,
                                        "name": "Identifier",
                                        "src": "787:5:0"
                                      }
                                    ],
                                    "id": 54,
                                    "name": "MemberAccess",
                                    "src": "787:15:0"
                                  }
                                ],
                                "id": 55,
                                "name": "FunctionCall",
                                "src": "780:23:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 56,
                                "name": "Literal",
                                "src": "823:4:0"
                              }
                            ],
                            "id": 57,
                            "name": "FunctionCall",
                            "src": "663:179:0"
                          }
                        ],
                        "id": 58,
                        "name": "FunctionCall",
                        "src": "616:237:0"
                      }
                    ],
                    "id": 59,
                    "name": "ExpressionStatement",
                    "src": "616:237:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7e99e25816b17ced99279bb8abd849457b4a53205c8c28d6e6907c86821b19a1",
                                  "typeString": "literal_string \"Border crossing is allowed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8,
                              "type": "function (bool,string memory)",
                              "value": "TravelerDataProcessed"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "871:21:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 61,
                            "name": "Literal",
                            "src": "893:4:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "426f726465722063726f7373696e6720697320616c6c6f776564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Border crossing is allowed\"",
                              "value": "Border crossing is allowed"
                            },
                            "id": 62,
                            "name": "Literal",
                            "src": "899:28:0"
                          }
                        ],
                        "id": 63,
                        "name": "FunctionCall",
                        "src": "871:57:0"
                      }
                    ],
                    "id": 64,
                    "name": "EmitStatement",
                    "src": "866:62:0"
                  }
                ],
                "id": 65,
                "name": "Block",
                "src": "605:331:0"
              }
            ],
            "id": 66,
            "name": "FunctionDefinition",
            "src": "438:498:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getValueAtHistoryMapping",
              "scope": 80,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userAddress",
                      "scope": 79,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 67,
                        "name": "ElementaryTypeName",
                        "src": "978:7:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "978:19:0"
                  }
                ],
                "id": 69,
                "name": "ParameterList",
                "src": "977:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 79,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Customs.Trip[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Customs.Trip[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Trip",
                              "referencedDeclaration": 17,
                              "type": "struct Customs.Trip"
                            },
                            "id": 70,
                            "name": "UserDefinedTypeName",
                            "src": "1020:4:0"
                          }
                        ],
                        "id": 71,
                        "name": "ArrayTypeName",
                        "src": "1020:6:0"
                      }
                    ],
                    "id": 72,
                    "name": "VariableDeclaration",
                    "src": "1020:13:0"
                  }
                ],
                "id": 73,
                "name": "ParameterList",
                "src": "1019:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 73
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Customs.Trip storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27,
                              "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                              "value": "personToHistory"
                            },
                            "id": 74,
                            "name": "Identifier",
                            "src": "1053:15:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 68,
                              "type": "address",
                              "value": "userAddress"
                            },
                            "id": 75,
                            "name": "Identifier",
                            "src": "1069:11:0"
                          }
                        ],
                        "id": 76,
                        "name": "IndexAccess",
                        "src": "1053:28:0"
                      }
                    ],
                    "id": 77,
                    "name": "Return",
                    "src": "1046:35:0"
                  }
                ],
                "id": 78,
                "name": "Block",
                "src": "1035:54:0"
              }
            ],
            "id": 79,
            "name": "FunctionDefinition",
            "src": "944:145:0"
          }
        ],
        "id": 80,
        "name": "ContractDefinition",
        "src": "104:1101:0"
      }
    ],
    "id": 81,
    "name": "SourceUnit",
    "src": "33:1174:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xb62Be19F9C6F259d329FFA206b24c0D4CfDbc13C",
      "transactionHash": "0x40213ce8afb6bc9ae9a3d6d5232d60bef1ecc18f303adf98a22cf9d3b6f0be88"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-12T08:24:11.184Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
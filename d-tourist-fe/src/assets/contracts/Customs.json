{
  "contractName": "Customs",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "personToHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "internalType": "struct Customs.City",
          "name": "from",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "internalType": "struct Customs.City",
          "name": "to",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "date",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_fromCity",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_fromCountry",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_toCity",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_toCountry",
          "type": "string"
        }
      ],
      "name": "crossBorder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getValueAtHistoryMapping",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct Customs.City",
              "name": "from",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                }
              ],
              "internalType": "struct Customs.City",
              "name": "to",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "internalType": "struct Customs.Trip[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fromCity\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fromCountry\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_toCity\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_toCountry\",\"type\":\"string\"}],\"name\":\"crossBorder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getValueAtHistoryMapping\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"date\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct Customs.Trip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"personToHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"internalType\":\"struct Customs.City\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"date\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Customs.sol\":\"Customs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Customs.sol\":{\"keccak256\":\"0x5917b2ea9f9bd857e679659ea90a5022bb9f1f08e0a482a6c364b39dc4b3a359\",\"urls\":[\"bzz-raw://fc8f0687f9831c892a54c4ace59d22c4523d3df411f60bc4d7283b050c1abc0b\",\"dweb:/ipfs/QmbHmhmwQtWcR8xKn6q2CH1L5gEZ7DWJqkpNHuj35dkfU4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f85806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634b89570414610046578063ca6ad14214610076578063e924f9b8146100a9575b600080fd5b610060600480360361005b9190810190610a2a565b6100c5565b60405161006d9190610d42565b60405180910390f35b610090600480360361008b9190810190610a53565b61045f565b6040516100a09493929190610d64565b60405180910390f35b6100c360048036036100be9190810190610a8f565b610766565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610454578382906000526020600020906005020160405180608001604052908160008201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f15780601f106101c6576101008083540402835291602001916101f1565b820191906000526020600020905b8154815290600101906020018083116101d457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102935780601f1061026857610100808354040283529160200191610293565b820191906000526020600020905b81548152906001019060200180831161027657829003601f168201915b505050505081525050815260200160028201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050508152505081526020016004820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016004820160089054906101000a900460ff16151515158152505081526020019060010190610125565b505050509050919050565b6000602052816000526040600020818154811061047857fe5b90600052602060002090600502016000915091505080600001604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050815250509080600201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b505050505081525050908060040160009054906101000a900467ffffffffffffffff16908060040160089054906101000a900460ff16905084565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280604051806040016040528088815260200187815250815260200160405180604001604052808681526020018581525081526020014267ffffffffffffffff1681526020016001151581525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001600082015181600001908051906020019061084a929190610907565b506020820151816001019080519060200190610867929190610907565b505050602082015181600201600082015181600001908051906020019061088f929190610907565b5060208201518160010190805190602001906108ac929190610907565b50505060408201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160040160086101000a81548160ff02191690831515021790555050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061094857805160ff1916838001178555610976565b82800160010185558215610976579182015b8281111561097557825182559160200191906001019061095a565b5b5090506109839190610987565b5090565b6109a991905b808211156109a557600081600090555060010161098d565b5090565b90565b6000813590506109bb81610f14565b92915050565b600082601f8301126109d257600080fd5b81356109e56109e082610de4565b610db7565b91508082526020830160208301858383011115610a0157600080fd5b610a0c838284610ec1565b50505092915050565b600081359050610a2481610f2b565b92915050565b600060208284031215610a3c57600080fd5b6000610a4a848285016109ac565b91505092915050565b60008060408385031215610a6657600080fd5b6000610a74858286016109ac565b9250506020610a8585828601610a15565b9150509250929050565b60008060008060808587031215610aa557600080fd5b600085013567ffffffffffffffff811115610abf57600080fd5b610acb878288016109c1565b945050602085013567ffffffffffffffff811115610ae857600080fd5b610af4878288016109c1565b935050604085013567ffffffffffffffff811115610b1157600080fd5b610b1d878288016109c1565b925050606085013567ffffffffffffffff811115610b3a57600080fd5b610b46878288016109c1565b91505092959194509250565b6000610b5e8383610cba565b905092915050565b6000610b7182610e20565b610b7b8185610e43565b935083602082028501610b8d85610e10565b8060005b85811015610bc95784840389528151610baa8582610b52565b9450610bb583610e36565b925060208a01995050600181019050610b91565b50829750879550505050505092915050565b610be481610e77565b82525050565b610bf381610e77565b82525050565b6000610c0482610e2b565b610c0e8185610e54565b9350610c1e818560208601610ed0565b610c2781610f03565b840191505092915050565b60006040830160008301518482036000860152610c4f8282610bf9565b91505060208301518482036020860152610c698282610bf9565b9150508091505092915050565b60006040830160008301518482036000860152610c938282610bf9565b91505060208301518482036020860152610cad8282610bf9565b9150508091505092915050565b60006080830160008301518482036000860152610cd78282610c32565b91505060208301518482036020860152610cf18282610c32565b9150506040830151610d066040860182610d24565b506060830151610d196060860182610bdb565b508091505092915050565b610d2d81610ead565b82525050565b610d3c81610ead565b82525050565b60006020820190508181036000830152610d5c8184610b66565b905092915050565b60006080820190508181036000830152610d7e8187610c76565b90508181036020830152610d928186610c76565b9050610da16040830185610d33565b610dae6060830184610bea565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610dda57600080fd5b8060405250919050565b600067ffffffffffffffff821115610dfb57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e7082610e83565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610eee578082015181840152602081019050610ed3565b83811115610efd576000848401525b50505050565b6000601f19601f8301169050919050565b610f1d81610e65565b8114610f2857600080fd5b50565b610f3481610ea3565b8114610f3f57600080fd5b5056fea365627a7a723158201e5d5cdcd86970e4888d35162ea782dc74057a6e6b97f7fd9e5c07807d6e68bd6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634b89570414610046578063ca6ad14214610076578063e924f9b8146100a9575b600080fd5b610060600480360361005b9190810190610a2a565b6100c5565b60405161006d9190610d42565b60405180910390f35b610090600480360361008b9190810190610a53565b61045f565b6040516100a09493929190610d64565b60405180910390f35b6100c360048036036100be9190810190610a8f565b610766565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610454578382906000526020600020906005020160405180608001604052908160008201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f15780601f106101c6576101008083540402835291602001916101f1565b820191906000526020600020905b8154815290600101906020018083116101d457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102935780601f1061026857610100808354040283529160200191610293565b820191906000526020600020905b81548152906001019060200180831161027657829003601f168201915b505050505081525050815260200160028201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050508152505081526020016004820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016004820160089054906101000a900460ff16151515158152505081526020019060010190610125565b505050509050919050565b6000602052816000526040600020818154811061047857fe5b90600052602060002090600502016000915091505080600001604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050815250509080600201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b505050505081525050908060040160009054906101000a900467ffffffffffffffff16908060040160089054906101000a900460ff16905084565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280604051806040016040528088815260200187815250815260200160405180604001604052808681526020018581525081526020014267ffffffffffffffff1681526020016001151581525090806001815401808255809150509060018203906000526020600020906005020160009091929091909150600082015181600001600082015181600001908051906020019061084a929190610907565b506020820151816001019080519060200190610867929190610907565b505050602082015181600201600082015181600001908051906020019061088f929190610907565b5060208201518160010190805190602001906108ac929190610907565b50505060408201518160040160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160040160086101000a81548160ff02191690831515021790555050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061094857805160ff1916838001178555610976565b82800160010185558215610976579182015b8281111561097557825182559160200191906001019061095a565b5b5090506109839190610987565b5090565b6109a991905b808211156109a557600081600090555060010161098d565b5090565b90565b6000813590506109bb81610f14565b92915050565b600082601f8301126109d257600080fd5b81356109e56109e082610de4565b610db7565b91508082526020830160208301858383011115610a0157600080fd5b610a0c838284610ec1565b50505092915050565b600081359050610a2481610f2b565b92915050565b600060208284031215610a3c57600080fd5b6000610a4a848285016109ac565b91505092915050565b60008060408385031215610a6657600080fd5b6000610a74858286016109ac565b9250506020610a8585828601610a15565b9150509250929050565b60008060008060808587031215610aa557600080fd5b600085013567ffffffffffffffff811115610abf57600080fd5b610acb878288016109c1565b945050602085013567ffffffffffffffff811115610ae857600080fd5b610af4878288016109c1565b935050604085013567ffffffffffffffff811115610b1157600080fd5b610b1d878288016109c1565b925050606085013567ffffffffffffffff811115610b3a57600080fd5b610b46878288016109c1565b91505092959194509250565b6000610b5e8383610cba565b905092915050565b6000610b7182610e20565b610b7b8185610e43565b935083602082028501610b8d85610e10565b8060005b85811015610bc95784840389528151610baa8582610b52565b9450610bb583610e36565b925060208a01995050600181019050610b91565b50829750879550505050505092915050565b610be481610e77565b82525050565b610bf381610e77565b82525050565b6000610c0482610e2b565b610c0e8185610e54565b9350610c1e818560208601610ed0565b610c2781610f03565b840191505092915050565b60006040830160008301518482036000860152610c4f8282610bf9565b91505060208301518482036020860152610c698282610bf9565b9150508091505092915050565b60006040830160008301518482036000860152610c938282610bf9565b91505060208301518482036020860152610cad8282610bf9565b9150508091505092915050565b60006080830160008301518482036000860152610cd78282610c32565b91505060208301518482036020860152610cf18282610c32565b9150506040830151610d066040860182610d24565b506060830151610d196060860182610bdb565b508091505092915050565b610d2d81610ead565b82525050565b610d3c81610ead565b82525050565b60006020820190508181036000830152610d5c8184610b66565b905092915050565b60006080820190508181036000830152610d7e8187610c76565b90508181036020830152610d928186610c76565b9050610da16040830185610d33565b610dae6060830184610bea565b95945050505050565b6000604051905081810181811067ffffffffffffffff82111715610dda57600080fd5b8060405250919050565b600067ffffffffffffffff821115610dfb57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e7082610e83565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610eee578082015181840152602081019050610ed3565b83811115610efd576000848401525b50505050565b6000601f19601f8301169050919050565b610f1d81610e65565b8114610f2857600080fd5b50565b610f3481610ea3565b8114610f3f57600080fd5b5056fea365627a7a723158201e5d5cdcd86970e4888d35162ea782dc74057a6e6b97f7fd9e5c07807d6e68bd6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "104:960:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:960:0;;;;;;;",
  "deployedSourceMap": "104:960:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:960:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;314:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;372:423;;;;;;;;;;;;;;;;:::ioo;372:423::-;550:15;:27;566:10;550:27;;;;;;;;;;;;;;;597:179;;;;;;;;620:29;;;;;;;;625:9;620:29;;;;636:12;620:29;;;597:179;;;;669:25;;;;;;;;674:7;669:25;;;;683:10;669:25;;;597:179;;;;721:15;597:179;;;;;;757:4;597:179;;;;;550:237;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;550:237:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:423;;;;:::o;104:960::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:366;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;1115:1;1112;1105:12;1067:2;1150:1;1167:53;1212:7;1203:6;1192:9;1188:22;1167:53;;;1157:63;;1129:97;1257:2;1275:53;1320:7;1311:6;1300:9;1296:22;1275:53;;;1265:63;;1236:98;1061:283;;;;;;1351:1041;;;;;1546:3;1534:9;1525:7;1521:23;1517:33;1514:2;;;1563:1;1560;1553:12;1514:2;1626:1;1615:9;1611:17;1598:31;1649:18;1641:6;1638:30;1635:2;;;1681:1;1678;1671:12;1635:2;1701:63;1756:7;1747:6;1736:9;1732:22;1701:63;;;1691:73;;1577:193;1829:2;1818:9;1814:18;1801:32;1853:18;1845:6;1842:30;1839:2;;;1885:1;1882;1875:12;1839:2;1905:63;1960:7;1951:6;1940:9;1936:22;1905:63;;;1895:73;;1780:194;2033:2;2022:9;2018:18;2005:32;2057:18;2049:6;2046:30;2043:2;;;2089:1;2086;2079:12;2043:2;2109:63;2164:7;2155:6;2144:9;2140:22;2109:63;;;2099:73;;1984:194;2237:2;2226:9;2222:18;2209:32;2261:18;2253:6;2250:30;2247:2;;;2293:1;2290;2283:12;2247:2;2313:63;2368:7;2359:6;2348:9;2344:22;2313:63;;;2303:73;;2188:194;1508:884;;;;;;;;2400:221;;2533:82;2611:3;2603:6;2533:82;;;2519:96;;2512:109;;;;;2684:976;;2861:70;2925:5;2861:70;;;2944:102;3039:6;3034:3;2944:102;;;2937:109;;3069:3;3111:4;3103:6;3099:17;3094:3;3090:27;3138:72;3204:5;3138:72;;;3230:7;3258:1;3243:378;3268:6;3265:1;3262:13;3243:378;;;3330:9;3324:4;3320:20;3315:3;3308:33;3375:6;3369:13;3397:96;3488:4;3473:13;3397:96;;;3389:104;;3510:76;3579:6;3510:76;;;3500:86;;3609:4;3604:3;3600:14;3593:21;;3300:321;3290:1;3287;3283:9;3278:14;;3243:378;;;3247:14;3634:4;3627:11;;3651:3;3644:10;;2840:820;;;;;;;;;;3668:94;3735:21;3750:5;3735:21;;;3730:3;3723:34;3717:45;;;3769:104;3846:21;3861:5;3846:21;;;3841:3;3834:34;3828:45;;;3880:319;;3978:35;4007:5;3978:35;;;4025:61;4079:6;4074:3;4025:61;;;4018:68;;4091:52;4136:6;4131:3;4124:4;4117:5;4113:16;4091:52;;;4164:29;4186:6;4164:29;;;4159:3;4155:39;4148:46;;3958:241;;;;;;4255:618;;4382:4;4377:3;4373:14;4465:4;4458:5;4454:16;4448:23;4517:3;4511:4;4507:14;4500:4;4495:3;4491:14;4484:38;4537:69;4601:4;4587:12;4537:69;;;4529:77;;4402:216;4694:4;4687:5;4683:16;4677:23;4746:3;4740:4;4736:14;4729:4;4724:3;4720:14;4713:38;4766:69;4830:4;4816:12;4766:69;;;4758:77;;4628:219;4864:4;4857:11;;4355:518;;;;;;4929:628;;5066:4;5061:3;5057:14;5149:4;5142:5;5138:16;5132:23;5201:3;5195:4;5191:14;5184:4;5179:3;5175:14;5168:38;5221:69;5285:4;5271:12;5221:69;;;5213:77;;5086:216;5378:4;5371:5;5367:16;5361:23;5430:3;5424:4;5420:14;5413:4;5408:3;5404:14;5397:38;5450:69;5514:4;5500:12;5450:69;;;5442:77;;5312:219;5548:4;5541:11;;5039:518;;;;;;5613:956;;5740:4;5735:3;5731:14;5823:4;5816:5;5812:16;5806:23;5875:3;5869:4;5865:14;5858:4;5853:3;5849:14;5842:38;5895:89;5979:4;5965:12;5895:89;;;5887:97;;5760:236;6067:4;6060:5;6056:16;6050:23;6119:3;6113:4;6109:14;6102:4;6097:3;6093:14;6086:38;6139:89;6223:4;6209:12;6139:89;;;6131:97;;6006:234;6313:4;6306:5;6302:16;6296:23;6325:61;6380:4;6375:3;6371:14;6357:12;6325:61;;;6250:142;6468:4;6461:5;6457:16;6451:23;6480:57;6531:4;6526:3;6522:14;6508:12;6480:57;;;6402:141;6560:4;6553:11;;5713:856;;;;;;6576:100;6647:23;6664:5;6647:23;;;6642:3;6635:36;6629:47;;;6683:110;6764:23;6781:5;6764:23;;;6759:3;6752:36;6746:47;;;6800:425;;7000:2;6989:9;6985:18;6977:26;;7050:9;7044:4;7040:20;7036:1;7025:9;7021:17;7014:47;7075:140;7210:4;7201:6;7075:140;;;7067:148;;6971:254;;;;;7232:771;;7498:3;7487:9;7483:19;7475:27;;7549:9;7543:4;7539:20;7535:1;7524:9;7520:17;7513:47;7574:94;7663:4;7654:6;7574:94;;;7566:102;;7716:9;7710:4;7706:20;7701:2;7690:9;7686:18;7679:48;7741:94;7830:4;7821:6;7741:94;;;7733:102;;7846:70;7912:2;7901:9;7897:18;7888:6;7846:70;;;7927:66;7989:2;7978:9;7974:18;7965:6;7927:66;;;7469:534;;;;;;;;8010:256;;8072:2;8066:9;8056:19;;8110:4;8102:6;8098:17;8209:6;8197:10;8194:22;8173:18;8161:10;8158:34;8155:62;8152:2;;;8230:1;8227;8220:12;8152:2;8250:10;8246:2;8239:22;8050:216;;;;;8273:322;;8417:18;8409:6;8406:30;8403:2;;;8449:1;8446;8439:12;8403:2;8516:4;8512:9;8505:4;8497:6;8493:17;8489:33;8481:41;;8580:4;8574;8570:15;8562:23;;8340:255;;;;8602:167;;8704:3;8696:11;;8742:4;8737:3;8733:14;8725:22;;8690:79;;;;8776:153;;8901:5;8895:12;8885:22;;8866:63;;;;8936:118;;9026:5;9020:12;9010:22;;8991:63;;;;9061:124;;9175:4;9170:3;9166:14;9158:22;;9152:33;;;;9193:194;;9339:6;9334:3;9327:19;9376:4;9371:3;9367:14;9352:29;;9320:67;;;;;9396:153;;9501:6;9496:3;9489:19;9538:4;9533:3;9529:14;9514:29;;9482:67;;;;;9557:91;;9619:24;9637:5;9619:24;;;9608:35;;9602:46;;;;9655:85;;9728:5;9721:13;9714:21;9703:32;;9697:43;;;;9747:121;;9820:42;9813:5;9809:54;9798:65;;9792:76;;;;9875:72;;9937:5;9926:16;;9920:27;;;;9954:96;;10026:18;10019:5;10015:30;10004:41;;9998:52;;;;10058:145;10139:6;10134:3;10129;10116:30;10195:1;10186:6;10181:3;10177:16;10170:27;10109:94;;;;10212:268;10277:1;10284:101;10298:6;10295:1;10292:13;10284:101;;;10374:1;10369:3;10365:11;10359:18;10355:1;10350:3;10346:11;10339:39;10320:2;10317:1;10313:10;10308:15;;10284:101;;;10400:6;10397:1;10394:13;10391:2;;;10465:1;10456:6;10451:3;10447:16;10440:27;10391:2;10261:219;;;;;10488:97;;10576:2;10572:7;10567:2;10560:5;10556:14;10552:28;10542:38;;10536:49;;;;10593:117;10662:24;10680:5;10662:24;;;10655:5;10652:35;10642:2;;10701:1;10698;10691:12;10642:2;10636:74;;10717:117;10786:24;10804:5;10786:24;;;10779:5;10776:35;10766:2;;10825:1;10822;10815:12;10766:2;10760:74;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Customs {\r\n    struct Trip {\r\n        City from;\r\n        City to;\r\n        uint64 date;\r\n        bool success;\r\n    }\r\n\r\n    struct City {\r\n        string name;\r\n        string country;\r\n    }\r\n\r\n    mapping(address => Trip[]) public personToHistory;\r\n\r\n    function crossBorder(\r\n        string memory _fromCity,\r\n        string memory _fromCountry,\r\n        string memory _toCity,\r\n        string memory _toCountry) public {\r\n        personToHistory[msg.sender].push(\r\n            Trip(\r\n                City(_fromCity, _fromCountry), \r\n                City(_toCity, _toCountry), \r\n                uint64(block.timestamp), \r\n                true\r\n            )\r\n        );\r\n    }\r\n\r\n    function getValueAtHistoryMapping(address userAddress) public view returns (Trip[] memory) {\r\n        return personToHistory[userAddress];\r\n    }\r\n\r\n    /*function _isCrossingAllowed(address _user) private pure returns (bool) {\r\n        return true;\r\n    }*/\r\n}\r\n",
  "sourcePath": "C:\\Users\\Volodymyr\\Documents\\dTourist\\contracts\\Customs.sol",
  "ast": {
    "absolutePath": "project:/contracts/Customs.sol",
    "exportedSymbols": {
      "Customs": [
        69
      ]
    },
    "id": 70,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "id": 2,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 69,
        "linearizedBaseContracts": [
          69
        ],
        "name": "Customs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Customs.Trip",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "151:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_City_$16_storage_ptr",
                  "typeString": "struct Customs.City"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 3,
                  "name": "City",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 16,
                  "src": "151:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_City_$16_storage_ptr",
                    "typeString": "struct Customs.City"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "171:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_City_$16_storage_ptr",
                  "typeString": "struct Customs.City"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 5,
                  "name": "City",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 16,
                  "src": "171:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_City_$16_storage_ptr",
                    "typeString": "struct Customs.City"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "189:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "189:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "success",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "211:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 9,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trip",
            "nodeType": "StructDefinition",
            "scope": 69,
            "src": "128:103:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Customs.City",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 13,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "262:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "name": "country",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "284:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "284:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "City",
            "nodeType": "StructDefinition",
            "scope": 69,
            "src": "239:67:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "personToHistory",
            "nodeType": "VariableDeclaration",
            "scope": 69,
            "src": "314:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$11_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Customs.Trip[])"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "314:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$11_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Customs.Trip[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 18,
                  "name": "Trip",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 11,
                  "src": "333:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trip_$11_storage_ptr",
                    "typeString": "struct Customs.Trip"
                  }
                },
                "id": 19,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "333:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Trip_$11_storage_$dyn_storage_ptr",
                  "typeString": "struct Customs.Trip[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "539:256:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 39,
                                "name": "_fromCity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "625:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 40,
                                "name": "_fromCountry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "636:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 38,
                              "name": "City",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "620:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_City_$16_storage_ptr_$",
                                "typeString": "type(struct Customs.City storage pointer)"
                              }
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "620:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_City_$16_memory",
                              "typeString": "struct Customs.City memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 43,
                                "name": "_toCity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "674:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 44,
                                "name": "_toCountry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "683:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 42,
                              "name": "City",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "669:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_City_$16_storage_ptr_$",
                                "typeString": "type(struct Customs.City storage pointer)"
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "669:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_City_$16_memory",
                              "typeString": "struct Customs.City memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 47,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "721:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "721:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "714:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": "uint64"
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "714:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "757:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_City_$16_memory",
                              "typeString": "struct Customs.City memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_City_$16_memory",
                              "typeString": "struct Customs.City memory"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 37,
                          "name": "Trip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "597:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Trip_$11_storage_ptr_$",
                            "typeString": "type(struct Customs.Trip storage pointer)"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "597:179:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trip_$11_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trip_$11_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "personToHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "550:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$11_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                          }
                        },
                        "id": 35,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 33,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "566:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "550:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trip_$11_storage_$dyn_storage",
                          "typeString": "struct Customs.Trip storage ref[] storage ref"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "550:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Trip_$11_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Customs.Trip storage ref) returns (uint256)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:237:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "550:237:0"
                }
              ]
            },
            "documentation": null,
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crossBorder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "_fromCity",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "403:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "_fromCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "437:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "_toCity",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "474:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_toCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "506:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:139:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:0"
            },
            "scope": 69,
            "src": "372:423:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "894:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "personToHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "912:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$11_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                      }
                    },
                    "id": 65,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "928:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "912:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$11_storage_$dyn_storage",
                      "typeString": "struct Customs.Trip storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 66,
                  "nodeType": "Return",
                  "src": "905:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValueAtHistoryMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "837:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:21:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "879:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trip_$11_memory_$dyn_memory_ptr",
                    "typeString": "struct Customs.Trip[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 59,
                      "name": "Trip",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 11,
                      "src": "879:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trip_$11_storage_ptr",
                        "typeString": "struct Customs.Trip"
                      }
                    },
                    "id": 60,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "879:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$11_storage_$dyn_storage_ptr",
                      "typeString": "struct Customs.Trip[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "878:15:0"
            },
            "scope": 69,
            "src": "803:145:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 70,
        "src": "104:960:0"
      }
    ],
    "src": "33:1033:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Customs.sol",
      "exportedSymbols": {
        "Customs": [
          69
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            69
          ],
          "name": "Customs",
          "scope": 70
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "Customs.Trip",
              "name": "Trip",
              "scope": 69,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "from",
                  "scope": 11,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Customs.City",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "City",
                      "referencedDeclaration": 16,
                      "type": "struct Customs.City"
                    },
                    "id": 3,
                    "name": "UserDefinedTypeName",
                    "src": "151:4:0"
                  }
                ],
                "id": 4,
                "name": "VariableDeclaration",
                "src": "151:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 11,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct Customs.City",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "City",
                      "referencedDeclaration": 16,
                      "type": "struct Customs.City"
                    },
                    "id": 5,
                    "name": "UserDefinedTypeName",
                    "src": "171:4:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "171:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "date",
                  "scope": 11,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint64",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint64",
                      "type": "uint64"
                    },
                    "id": 7,
                    "name": "ElementaryTypeName",
                    "src": "189:6:0"
                  }
                ],
                "id": 8,
                "name": "VariableDeclaration",
                "src": "189:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "success",
                  "scope": 11,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "211:4:0"
                  }
                ],
                "id": 10,
                "name": "VariableDeclaration",
                "src": "211:12:0"
              }
            ],
            "id": 11,
            "name": "StructDefinition",
            "src": "128:103:0"
          },
          {
            "attributes": {
              "canonicalName": "Customs.City",
              "name": "City",
              "scope": 69,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "262:6:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "262:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "country",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "284:6:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "284:14:0"
              }
            ],
            "id": 16,
            "name": "StructDefinition",
            "src": "239:67:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "personToHistory",
              "scope": 69,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Customs.Trip[])",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Customs.Trip[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 17,
                    "name": "ElementaryTypeName",
                    "src": "322:7:0"
                  },
                  {
                    "attributes": {
                      "length": null,
                      "type": "struct Customs.Trip[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Trip",
                          "referencedDeclaration": 11,
                          "type": "struct Customs.Trip"
                        },
                        "id": 18,
                        "name": "UserDefinedTypeName",
                        "src": "333:4:0"
                      }
                    ],
                    "id": 19,
                    "name": "ArrayTypeName",
                    "src": "333:6:0"
                  }
                ],
                "id": 20,
                "name": "Mapping",
                "src": "314:26:0"
              }
            ],
            "id": 21,
            "name": "VariableDeclaration",
            "src": "314:49:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "crossBorder",
              "scope": 69,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_fromCity",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "403:6:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "403:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_fromCountry",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 24,
                        "name": "ElementaryTypeName",
                        "src": "437:6:0"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "437:26:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_toCity",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 26,
                        "name": "ElementaryTypeName",
                        "src": "474:6:0"
                      }
                    ],
                    "id": 27,
                    "name": "VariableDeclaration",
                    "src": "474:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_toCountry",
                      "scope": 55,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 28,
                        "name": "ElementaryTypeName",
                        "src": "506:6:0"
                      }
                    ],
                    "id": 29,
                    "name": "VariableDeclaration",
                    "src": "506:24:0"
                  }
                ],
                "id": 30,
                "name": "ParameterList",
                "src": "392:139:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 31,
                "name": "ParameterList",
                "src": "539:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Trip_$11_memory",
                                  "typeString": "struct Customs.Trip memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Customs.Trip storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Customs.Trip storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 21,
                                      "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                                      "value": "personToHistory"
                                    },
                                    "id": 32,
                                    "name": "Identifier",
                                    "src": "550:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 117,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 33,
                                        "name": "Identifier",
                                        "src": "566:3:0"
                                      }
                                    ],
                                    "id": 34,
                                    "name": "MemberAccess",
                                    "src": "566:10:0"
                                  }
                                ],
                                "id": 35,
                                "name": "IndexAccess",
                                "src": "550:27:0"
                              }
                            ],
                            "id": 36,
                            "name": "MemberAccess",
                            "src": "550:32:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Customs.Trip memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_City_$16_memory",
                                      "typeString": "struct Customs.City memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_City_$16_memory",
                                      "typeString": "struct Customs.City memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(struct Customs.Trip storage pointer)",
                                  "value": "Trip"
                                },
                                "id": 37,
                                "name": "Identifier",
                                "src": "597:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": true,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct Customs.City memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "type(struct Customs.City storage pointer)",
                                      "value": "City"
                                    },
                                    "id": 38,
                                    "name": "Identifier",
                                    "src": "620:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 23,
                                      "type": "string memory",
                                      "value": "_fromCity"
                                    },
                                    "id": 39,
                                    "name": "Identifier",
                                    "src": "625:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 25,
                                      "type": "string memory",
                                      "value": "_fromCountry"
                                    },
                                    "id": 40,
                                    "name": "Identifier",
                                    "src": "636:12:0"
                                  }
                                ],
                                "id": 41,
                                "name": "FunctionCall",
                                "src": "620:29:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": true,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct Customs.City memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 16,
                                      "type": "type(struct Customs.City storage pointer)",
                                      "value": "City"
                                    },
                                    "id": 42,
                                    "name": "Identifier",
                                    "src": "669:4:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 27,
                                      "type": "string memory",
                                      "value": "_toCity"
                                    },
                                    "id": 43,
                                    "name": "Identifier",
                                    "src": "674:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 29,
                                      "type": "string memory",
                                      "value": "_toCountry"
                                    },
                                    "id": 44,
                                    "name": "Identifier",
                                    "src": "683:10:0"
                                  }
                                ],
                                "id": 45,
                                "name": "FunctionCall",
                                "src": "669:25:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint64",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint64)",
                                      "value": "uint64"
                                    },
                                    "id": 46,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "714:6:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "timestamp",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 107,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 47,
                                        "name": "Identifier",
                                        "src": "721:5:0"
                                      }
                                    ],
                                    "id": 48,
                                    "name": "MemberAccess",
                                    "src": "721:15:0"
                                  }
                                ],
                                "id": 49,
                                "name": "FunctionCall",
                                "src": "714:23:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 50,
                                "name": "Literal",
                                "src": "757:4:0"
                              }
                            ],
                            "id": 51,
                            "name": "FunctionCall",
                            "src": "597:179:0"
                          }
                        ],
                        "id": 52,
                        "name": "FunctionCall",
                        "src": "550:237:0"
                      }
                    ],
                    "id": 53,
                    "name": "ExpressionStatement",
                    "src": "550:237:0"
                  }
                ],
                "id": 54,
                "name": "Block",
                "src": "539:256:0"
              }
            ],
            "id": 55,
            "name": "FunctionDefinition",
            "src": "372:423:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getValueAtHistoryMapping",
              "scope": 69,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userAddress",
                      "scope": 68,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 56,
                        "name": "ElementaryTypeName",
                        "src": "837:7:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "837:19:0"
                  }
                ],
                "id": 58,
                "name": "ParameterList",
                "src": "836:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 68,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Customs.Trip[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Customs.Trip[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Trip",
                              "referencedDeclaration": 11,
                              "type": "struct Customs.Trip"
                            },
                            "id": 59,
                            "name": "UserDefinedTypeName",
                            "src": "879:4:0"
                          }
                        ],
                        "id": 60,
                        "name": "ArrayTypeName",
                        "src": "879:6:0"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "879:13:0"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "878:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 62
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Customs.Trip storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                              "value": "personToHistory"
                            },
                            "id": 63,
                            "name": "Identifier",
                            "src": "912:15:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 57,
                              "type": "address",
                              "value": "userAddress"
                            },
                            "id": 64,
                            "name": "Identifier",
                            "src": "928:11:0"
                          }
                        ],
                        "id": 65,
                        "name": "IndexAccess",
                        "src": "912:28:0"
                      }
                    ],
                    "id": 66,
                    "name": "Return",
                    "src": "905:35:0"
                  }
                ],
                "id": 67,
                "name": "Block",
                "src": "894:54:0"
              }
            ],
            "id": 68,
            "name": "FunctionDefinition",
            "src": "803:145:0"
          }
        ],
        "id": 69,
        "name": "ContractDefinition",
        "src": "104:960:0"
      }
    ],
    "id": 70,
    "name": "SourceUnit",
    "src": "33:1033:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEB687668c9F7Ff413873deb39B6E9B5Ede0dfF70",
      "transactionHash": "0xf440cc28c364c76d2d47dd83e42c5a42aaf0fdf913b2ab266ffe9f27efffb34f"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-08T17:54:47.164Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
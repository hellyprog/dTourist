{
  "contractName": "Customs",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToCountry",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "personToHistory",
      "outputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        }
      ],
      "name": "crossBorder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getValueAtHistoryMapping",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ],
          "internalType": "struct Customs.Trip[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToCountry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"crossBorder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getValueAtHistoryMapping\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct Customs.Trip[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"personToHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Customs.sol\":\"Customs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Customs.sol\":{\"keccak256\":\"0x6bccf0073309e730f28dccbf4a5b8cdae8683f93ce88bcf9eca6149ae0e9d232\",\"urls\":[\"bzz-raw://e70c13bd21e2c272469f384023a0199af9cace564b024fe190835cace15c4bd5\",\"dweb:/ipfs/QmexAjiWXcRRbQZc89byRLz2xCuueXWsDXkzKtS4GxNfk3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610945806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312a13531146100515780634b8957041461006d578063ca6ad1421461009d578063f66c6786146100d0575b600080fd5b61006b60048036036100669190810190610581565b610100565b005b61008760048036036100829190810190610558565b610279565b60405161009491906107af565b60405180910390f35b6100b760048036036100b291908101906105d0565b6103e7565b6040516100c7949392919061076a565b60405180910390f35b6100ea60048036036100e59190810190610558565b61047e565b6040516100f791906107d1565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550505050505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103dc57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff161515151581525050815260200190600101906102d9565b505050509050919050565b6000602052816000526040600020818154811061040057fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60016020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b505050505081565b60008135905061053d816108d4565b92915050565b600081359050610552816108eb565b92915050565b60006020828403121561056a57600080fd5b60006105788482850161052e565b91505092915050565b60008060006060848603121561059657600080fd5b60006105a48682870161052e565b93505060206105b58682870161052e565b92505060406105c686828701610543565b9150509250925092565b600080604083850312156105e357600080fd5b60006105f18582860161052e565b925050602061060285828601610543565b9150509250929050565b600061061883836106f7565b60808301905092915050565b61062d81610848565b82525050565b61063c81610848565b82525050565b600061064d82610803565b6106578185610826565b9350610662836107f3565b8060005b8381101561069357815161067a888261060c565b975061068583610819565b925050600181019050610666565b5085935050505092915050565b6106a98161085a565b82525050565b6106b88161085a565b82525050565b60006106c98261080e565b6106d38185610837565b93506106e3818560208601610890565b6106ec816108c3565b840191505092915050565b60808201600082015161070d6000850182610624565b5060208201516107206020850182610624565b506040820151610733604085018261074c565b50606082015161074660608501826106a0565b50505050565b61075581610886565b82525050565b61076481610886565b82525050565b600060808201905061077f6000830187610633565b61078c6020830186610633565b610799604083018561075b565b6107a660608301846106af565b95945050505050565b600060208201905081810360008301526107c98184610642565b905092915050565b600060208201905081810360008301526107eb81846106be565b905092915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061085382610866565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156108ae578082015181840152602081019050610893565b838111156108bd576000848401525b50505050565b6000601f19601f8301169050919050565b6108dd81610848565b81146108e857600080fd5b50565b6108f481610886565b81146108ff57600080fd5b5056fea365627a7a723158204f421904ec2ca60ae9ff78d21afac5276d7f37c0ae3cc6a1ff1101f8de4d857b6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806312a13531146100515780634b8957041461006d578063ca6ad1421461009d578063f66c6786146100d0575b600080fd5b61006b60048036036100669190810190610581565b610100565b005b61008760048036036100829190810190610558565b610279565b60405161009491906107af565b60405180910390f35b6100b760048036036100b291908101906105d0565b6103e7565b6040516100c7949392919061076a565b60405180910390f35b6100ea60048036036100e59190810190610558565b61047e565b6040516100f791906107d1565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550505050505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103dc57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff161515151581525050815260200190600101906102d9565b505050509050919050565b6000602052816000526040600020818154811061040057fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60016020528060005260406000206000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b505050505081565b60008135905061053d816108d4565b92915050565b600081359050610552816108eb565b92915050565b60006020828403121561056a57600080fd5b60006105788482850161052e565b91505092915050565b60008060006060848603121561059657600080fd5b60006105a48682870161052e565b93505060206105b58682870161052e565b92505060406105c686828701610543565b9150509250925092565b600080604083850312156105e357600080fd5b60006105f18582860161052e565b925050602061060285828601610543565b9150509250929050565b600061061883836106f7565b60808301905092915050565b61062d81610848565b82525050565b61063c81610848565b82525050565b600061064d82610803565b6106578185610826565b9350610662836107f3565b8060005b8381101561069357815161067a888261060c565b975061068583610819565b925050600181019050610666565b5085935050505092915050565b6106a98161085a565b82525050565b6106b88161085a565b82525050565b60006106c98261080e565b6106d38185610837565b93506106e3818560208601610890565b6106ec816108c3565b840191505092915050565b60808201600082015161070d6000850182610624565b5060208201516107206020850182610624565b506040820151610733604085018261074c565b50606082015161074660608501826106a0565b50505050565b61075581610886565b82525050565b61076481610886565b82525050565b600060808201905061077f6000830187610633565b61078c6020830186610633565b610799604083018561075b565b6107a660608301846106af565b95945050505050565b600060208201905081810360008301526107c98184610642565b905092915050565b600060208201905081810360008301526107eb81846106be565b905092915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061085382610866565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156108ae578082015181840152602081019050610893565b838111156108bd576000848401525b50505050565b6000601f19601f8301169050919050565b6108dd81610848565b81146108e857600080fd5b50565b6108f481610886565b81146108ff57600080fd5b5056fea365627a7a723158204f421904ec2ca60ae9ff78d21afac5276d7f37c0ae3cc6a1ff1101f8de4d857b6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "104:681:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:681:0;;;;;;;",
  "deployedSourceMap": "104:681:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:681:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:153;;;;;;;;;;;;;;;;:::i;:::-;;406:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;128:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;185:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;245:153;327:15;:27;343:10;327:27;;;;;;;;;;;;;;;360:29;;;;;;;;365:5;360:29;;;;;;372:3;360:29;;;;;;377:5;360:29;;;;384:4;360:29;;;;;327:63;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;327:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:153;;;:::o;406:145::-;484:13;515:15;:28;531:11;515:28;;;;;;;;;;;;;;;508:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:145;;;:::o;128:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;185:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;279:241;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;487:6;476:9;472:22;451:53;;;441:63;;413:97;345:175;;;;;527:491;;;;665:2;653:9;644:7;640:23;636:32;633:2;;;681:1;678;671:12;633:2;716:1;733:53;778:7;769:6;758:9;754:22;733:53;;;723:63;;695:97;823:2;841:53;886:7;877:6;866:9;862:22;841:53;;;831:63;;802:98;931:2;949:53;994:7;985:6;974:9;970:22;949:53;;;939:63;;910:98;627:391;;;;;;1025:366;;;1146:2;1134:9;1125:7;1121:23;1117:32;1114:2;;;1162:1;1159;1152:12;1114:2;1197:1;1214:53;1259:7;1250:6;1239:9;1235:22;1214:53;;;1204:63;;1176:97;1304:2;1322:53;1367:7;1358:6;1347:9;1343:22;1322:53;;;1312:63;;1283:98;1108:283;;;;;;1399:241;;1518:82;1596:3;1588:6;1518:82;;;1629:4;1624:3;1620:14;1606:28;;1511:129;;;;;1648:103;1721:24;1739:5;1721:24;;;1716:3;1709:37;1703:48;;;1758:113;1841:24;1859:5;1841:24;;;1836:3;1829:37;1823:48;;;1933:818;;2110:70;2174:5;2110:70;;;2193:102;2288:6;2283:3;2193:102;;;2186:109;;2316:72;2382:5;2316:72;;;2408:7;2436:1;2421:308;2446:6;2443:1;2440:13;2421:308;;;2513:6;2507:13;2534:95;2625:3;2610:13;2534:95;;;2527:102;;2646:76;2715:6;2646:76;;;2636:86;;2478:251;2468:1;2465;2461:9;2456:14;;2421:308;;;2425:14;2742:3;2735:10;;2089:662;;;;;;;;2759:94;2826:21;2841:5;2826:21;;;2821:3;2814:34;2808:45;;;2860:104;2937:21;2952:5;2937:21;;;2932:3;2925:34;2919:45;;;2971:339;;3079:35;3108:5;3079:35;;;3126:71;3190:6;3185:3;3126:71;;;3119:78;;3202:52;3247:6;3242:3;3235:4;3228:5;3224:16;3202:52;;;3275:29;3297:6;3275:29;;;3270:3;3266:39;3259:46;;3059:251;;;;;;3366:755;3485:4;3480:3;3476:14;3568:4;3561:5;3557:16;3551:23;3580:63;3637:4;3632:3;3628:14;3614:12;3580:63;;;3505:144;3720:4;3713:5;3709:16;3703:23;3732:63;3789:4;3784:3;3780:14;3766:12;3732:63;;;3659:142;3874:4;3867:5;3863:16;3857:23;3886:63;3943:4;3938:3;3934:14;3920:12;3886:63;;;3811:144;4031:4;4024:5;4020:16;4014:23;4043:57;4094:4;4089:3;4085:14;4071:12;4043:57;;;3965:141;3458:663;;;;4128:103;4201:24;4219:5;4201:24;;;4196:3;4189:37;4183:48;;;4238:113;4321:24;4339:5;4321:24;;;4316:3;4309:37;4303:48;;;4358:535;;4554:3;4543:9;4539:19;4531:27;;4569:71;4637:1;4626:9;4622:17;4613:6;4569:71;;;4651:72;4719:2;4708:9;4704:18;4695:6;4651:72;;;4734;4802:2;4791:9;4787:18;4778:6;4734:72;;;4817:66;4879:2;4868:9;4864:18;4855:6;4817:66;;;4525:368;;;;;;;;4900:425;;5100:2;5089:9;5085:18;5077:26;;5150:9;5144:4;5140:20;5136:1;5125:9;5121:17;5114:47;5175:140;5310:4;5301:6;5175:140;;;5167:148;;5071:254;;;;;5332:293;;5466:2;5455:9;5451:18;5443:26;;5516:9;5510:4;5506:20;5502:1;5491:9;5487:17;5480:47;5541:74;5610:4;5601:6;5541:74;;;5533:82;;5437:188;;;;;5632:167;;5734:3;5726:11;;5772:4;5767:3;5763:14;5755:22;;5720:79;;;;5806:153;;5931:5;5925:12;5915:22;;5896:63;;;;5966:118;;6056:5;6050:12;6040:22;;6021:63;;;;6091:124;;6205:4;6200:3;6196:14;6188:22;;6182:33;;;;6223:194;;6369:6;6364:3;6357:19;6406:4;6401:3;6397:14;6382:29;;6350:67;;;;;6426:163;;6541:6;6536:3;6529:19;6578:4;6573:3;6569:14;6554:29;;6522:67;;;;;6597:91;;6659:24;6677:5;6659:24;;;6648:35;;6642:46;;;;6695:85;;6768:5;6761:13;6754:21;6743:32;;6737:43;;;;6787:121;;6860:42;6853:5;6849:54;6838:65;;6832:76;;;;6915:72;;6977:5;6966:16;;6960:27;;;;6995:268;7060:1;7067:101;7081:6;7078:1;7075:13;7067:101;;;7157:1;7152:3;7148:11;7142:18;7138:1;7133:3;7129:11;7122:39;7103:2;7100:1;7096:10;7091:15;;7067:101;;;7183:6;7180:1;7177:13;7174:2;;;7248:1;7239:6;7234:3;7230:16;7223:27;7174:2;7044:219;;;;;7271:97;;7359:2;7355:7;7350:2;7343:5;7339:14;7335:28;7325:38;;7319:49;;;;7376:117;7445:24;7463:5;7445:24;;;7438:5;7435:35;7425:2;;7484:1;7481;7474:12;7425:2;7419:74;;7500:117;7569:24;7587:5;7569:24;;;7562:5;7559:35;7549:2;;7608:1;7605;7598:12;7549:2;7543:74;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Customs {\r\n    mapping (address => Trip[]) public personToHistory;\r\n    mapping (address => string) public addressToCountry;\r\n\r\n    function crossBorder(address _from, address _to, uint256 _date) public {\r\n        personToHistory[msg.sender].push(Trip(_from, _to, _date, true));\r\n    }\r\n\r\n    function getValueAtHistoryMapping(address userAddress)  public  view  returns(Trip[] memory) {\r\n      return personToHistory[userAddress];\r\n    }\r\n\r\n    /*function _isCrossingAllowed(address _user) private pure returns (bool) {\r\n        return true;\r\n    }*/\r\n\r\n    struct Trip {\r\n        address from;\r\n        address to;\r\n        uint256 date;\r\n        bool success;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Volodymyr\\Documents\\dTourist\\smart-contracts\\contracts\\Customs.sol",
  "ast": {
    "absolutePath": "project:/contracts/Customs.sol",
    "exportedSymbols": {
      "Customs": [
        57
      ]
    },
    "id": 58,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "id": 2,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57
        ],
        "name": "Customs",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "personToHistory",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "128:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$56_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Customs.Trip[])"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "137:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "128:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$56_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Customs.Trip[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 4,
                  "name": "Trip",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 56,
                  "src": "148:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trip_$56_storage_ptr",
                    "typeString": "struct Customs.Trip"
                  }
                },
                "id": 5,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "148:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Trip_$56_storage_$dyn_storage_ptr",
                  "typeString": "struct Customs.Trip[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "addressToCountry",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "185:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "194:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "185:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 9,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "205:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "316:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "365:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 27,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "372:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "_date",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "377:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 29,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "384:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 25,
                          "name": "Trip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "360:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Trip_$56_storage_ptr_$",
                            "typeString": "type(struct Customs.Trip storage pointer)"
                          }
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "360:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trip_$56_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trip_$56_memory",
                          "typeString": "struct Customs.Trip memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "personToHistory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "327:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$56_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                          }
                        },
                        "id": 23,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "343:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "343:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "327:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trip_$56_storage_$dyn_storage",
                          "typeString": "struct Customs.Trip storage ref[] storage ref"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "327:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Trip_$56_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Customs.Trip storage ref) returns (uint256)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "327:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "327:63:0"
                }
              ]
            },
            "documentation": null,
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "crossBorder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "266:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "281:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "294:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:43:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:0"
            },
            "scope": 57,
            "src": "245:153:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "499:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "personToHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Trip_$56_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Customs.Trip storage ref[] storage ref)"
                      }
                    },
                    "id": 44,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "531:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "515:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$56_storage_$dyn_storage",
                      "typeString": "struct Customs.Trip storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 41,
                  "id": 45,
                  "nodeType": "Return",
                  "src": "508:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValueAtHistoryMapping",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "440:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "439:21:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "484:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trip_$56_memory_$dyn_memory_ptr",
                    "typeString": "struct Customs.Trip[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 38,
                      "name": "Trip",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 56,
                      "src": "484:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trip_$56_storage_ptr",
                        "typeString": "struct Customs.Trip"
                      }
                    },
                    "id": 39,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "484:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trip_$56_storage_$dyn_storage_ptr",
                      "typeString": "struct Customs.Trip[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:15:0"
            },
            "scope": 57,
            "src": "406:145:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Customs.Trip",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 49,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "695:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 48,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "695:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "718:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 50,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 53,
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "739:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 52,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "739:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "name": "success",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "762:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 54,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "762:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Trip",
            "nodeType": "StructDefinition",
            "scope": 57,
            "src": "672:110:0",
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "104:681:0"
      }
    ],
    "src": "33:752:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Customs.sol",
      "exportedSymbols": {
        "Customs": [
          57
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "68:32:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            57
          ],
          "name": "Customs",
          "scope": 58
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "personToHistory",
              "scope": 57,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Customs.Trip[])",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Customs.Trip[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 3,
                    "name": "ElementaryTypeName",
                    "src": "137:7:0"
                  },
                  {
                    "attributes": {
                      "length": null,
                      "type": "struct Customs.Trip[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Trip",
                          "referencedDeclaration": 56,
                          "type": "struct Customs.Trip"
                        },
                        "id": 4,
                        "name": "UserDefinedTypeName",
                        "src": "148:4:0"
                      }
                    ],
                    "id": 5,
                    "name": "ArrayTypeName",
                    "src": "148:6:0"
                  }
                ],
                "id": 6,
                "name": "Mapping",
                "src": "128:27:0"
              }
            ],
            "id": 7,
            "name": "VariableDeclaration",
            "src": "128:50:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "addressToCountry",
              "scope": 57,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => string)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "194:7:0"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "205:6:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "185:27:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "185:51:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "crossBorder",
              "scope": 57,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12,
                        "name": "ElementaryTypeName",
                        "src": "266:7:0"
                      }
                    ],
                    "id": 13,
                    "name": "VariableDeclaration",
                    "src": "266:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "281:7:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "281:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_date",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 16,
                        "name": "ElementaryTypeName",
                        "src": "294:7:0"
                      }
                    ],
                    "id": 17,
                    "name": "VariableDeclaration",
                    "src": "294:13:0"
                  }
                ],
                "id": 18,
                "name": "ParameterList",
                "src": "265:43:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 19,
                "name": "ParameterList",
                "src": "316:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Trip_$56_memory",
                                  "typeString": "struct Customs.Trip memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Customs.Trip storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Customs.Trip storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7,
                                      "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                                      "value": "personToHistory"
                                    },
                                    "id": 20,
                                    "name": "Identifier",
                                    "src": "327:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 105,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 21,
                                        "name": "Identifier",
                                        "src": "343:3:0"
                                      }
                                    ],
                                    "id": 22,
                                    "name": "MemberAccess",
                                    "src": "343:10:0"
                                  }
                                ],
                                "id": 23,
                                "name": "IndexAccess",
                                "src": "327:27:0"
                              }
                            ],
                            "id": 24,
                            "name": "MemberAccess",
                            "src": "327:32:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Customs.Trip memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "type(struct Customs.Trip storage pointer)",
                                  "value": "Trip"
                                },
                                "id": 25,
                                "name": "Identifier",
                                "src": "360:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "address",
                                  "value": "_from"
                                },
                                "id": 26,
                                "name": "Identifier",
                                "src": "365:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 27,
                                "name": "Identifier",
                                "src": "372:3:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17,
                                  "type": "uint256",
                                  "value": "_date"
                                },
                                "id": 28,
                                "name": "Identifier",
                                "src": "377:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 29,
                                "name": "Literal",
                                "src": "384:4:0"
                              }
                            ],
                            "id": 30,
                            "name": "FunctionCall",
                            "src": "360:29:0"
                          }
                        ],
                        "id": 31,
                        "name": "FunctionCall",
                        "src": "327:63:0"
                      }
                    ],
                    "id": 32,
                    "name": "ExpressionStatement",
                    "src": "327:63:0"
                  }
                ],
                "id": 33,
                "name": "Block",
                "src": "316:82:0"
              }
            ],
            "id": 34,
            "name": "FunctionDefinition",
            "src": "245:153:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getValueAtHistoryMapping",
              "scope": 57,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "userAddress",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "440:7:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "440:19:0"
                  }
                ],
                "id": 37,
                "name": "ParameterList",
                "src": "439:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 47,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Customs.Trip[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Customs.Trip[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Trip",
                              "referencedDeclaration": 56,
                              "type": "struct Customs.Trip"
                            },
                            "id": 38,
                            "name": "UserDefinedTypeName",
                            "src": "484:4:0"
                          }
                        ],
                        "id": 39,
                        "name": "ArrayTypeName",
                        "src": "484:6:0"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "484:13:0"
                  }
                ],
                "id": 41,
                "name": "ParameterList",
                "src": "483:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 41
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Customs.Trip storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7,
                              "type": "mapping(address => struct Customs.Trip storage ref[] storage ref)",
                              "value": "personToHistory"
                            },
                            "id": 42,
                            "name": "Identifier",
                            "src": "515:15:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 36,
                              "type": "address",
                              "value": "userAddress"
                            },
                            "id": 43,
                            "name": "Identifier",
                            "src": "531:11:0"
                          }
                        ],
                        "id": 44,
                        "name": "IndexAccess",
                        "src": "515:28:0"
                      }
                    ],
                    "id": 45,
                    "name": "Return",
                    "src": "508:35:0"
                  }
                ],
                "id": 46,
                "name": "Block",
                "src": "499:52:0"
              }
            ],
            "id": 47,
            "name": "FunctionDefinition",
            "src": "406:145:0"
          },
          {
            "attributes": {
              "canonicalName": "Customs.Trip",
              "name": "Trip",
              "scope": 57,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "from",
                  "scope": 56,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 48,
                    "name": "ElementaryTypeName",
                    "src": "695:7:0"
                  }
                ],
                "id": 49,
                "name": "VariableDeclaration",
                "src": "695:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 56,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 50,
                    "name": "ElementaryTypeName",
                    "src": "718:7:0"
                  }
                ],
                "id": 51,
                "name": "VariableDeclaration",
                "src": "718:10:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "date",
                  "scope": 56,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 52,
                    "name": "ElementaryTypeName",
                    "src": "739:7:0"
                  }
                ],
                "id": 53,
                "name": "VariableDeclaration",
                "src": "739:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "success",
                  "scope": 56,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 54,
                    "name": "ElementaryTypeName",
                    "src": "762:4:0"
                  }
                ],
                "id": 55,
                "name": "VariableDeclaration",
                "src": "762:12:0"
              }
            ],
            "id": 56,
            "name": "StructDefinition",
            "src": "672:110:0"
          }
        ],
        "id": 57,
        "name": "ContractDefinition",
        "src": "104:681:0"
      }
    ],
    "id": 58,
    "name": "SourceUnit",
    "src": "33:752:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x768eF11a691E3843462188b489ddDf79594E1b08",
      "transactionHash": "0x9078cfc535ed1b8df50c3758b105915e07bf4212a5a391b257afca2308958426"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-15T21:48:02.339Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}